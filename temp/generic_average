using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace WpfApp3
{

    public partial class MainWindow : Window
    {
        public abstract class NumericBase<T,U>
        {
            public abstract void Sum(T t);
            public abstract void SetDefault();
            public abstract U GetAverage();
          
        }
        public class NumericInt : NumericBase<NumericInt, int>
        {
            int Value { get; set; }
            int Counter { get; set; }
            int AverageValue { get; set; }

            public NumericInt() { }
            public NumericInt(int param) 
            { 
                this.Value = param;
                this.Counter = 1;          
            }
            public override void Sum (NumericInt obj) 
            {
             
                    this.Value = checked(this.Value + obj.Value);
                    this.Counter += 1;
                    this.AverageValue = this.Value/Counter;
             
            }
            public override void SetDefault() 
            {
                this.Value = 0;
                this.AverageValue = 0;
                this.Counter = 0;
            }
            public override int GetAverage()
            {
                return this.AverageValue;
            }
            public static implicit operator NumericInt(int t) => new NumericInt(t);
        }

        public class Average<T,U> where T: NumericBase<T,U>, new()
        {
            public T obj;
            public Average() 
            {
                obj = new T();
            }
            public void add(T value) 
                {
                    try
                    {
                        obj.Sum(value);
                    }
                    catch (Exception e)
                    {
                        MessageBox.Show(e.Message);
                        return;
                    }
                }
            public void reset() 
                {
                    obj.SetDefault();
                }
            public U average() 
            {
                return obj.GetAverage();
            }

        }
        public MainWindow()
        {
            InitializeComponent();
            var av = new Average<NumericInt, int>();
            av.add(2);
            av.add(3);
            av.add(7);
            var a = av.average();
            av.reset();
            av.add(14);
            av.add(10);
            a = av.average();   
        }
    }
}
